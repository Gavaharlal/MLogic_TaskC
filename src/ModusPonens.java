import parser.Expression;
import parser.operations.binary.Implication;
import parser.operations.unary.Negation;

public class ModusPonens {
    public static void part1(Expression expression, Expression leftSon) {
        System.out.println(new Implication(new Implication(new Negation(expression), new Negation(new Implication(leftSon, expression))), new Implication(new Implication(new Negation(expression), new Negation(new Negation(new Implication(leftSon, expression)))), new Negation(new Negation(expression)))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Negation(expression)), new Implication(new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression))), new Negation(new Implication(leftSon, expression)))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Negation(expression)), new Implication(new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression))), new Negation(new Implication(leftSon, expression)))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Negation(expression)), new Implication(new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression))), new Negation(new Implication(leftSon, expression)))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Negation(expression)), new Implication(new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression))), new Negation(new Implication(leftSon, expression))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Negation(expression))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Negation(expression)), new Implication(new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression))), new Negation(new Implication(leftSon, expression))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression))), new Negation(new Implication(leftSon, expression)))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Negation(expression)), new Implication(new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression))), new Negation(new Implication(leftSon, expression))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression))), new Negation(new Implication(leftSon, expression))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression))), new Negation(new Implication(leftSon, expression)))).toString());
        System.out.println(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))))).toString());
    }

    public static void part2(Expression expression, Expression leftSon) {
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression)))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression)))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression)))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression)))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression)))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression)))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Negation(expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))))).toString());

    }

    public static void part3(Expression expression, Expression leftSon) {
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, expression)), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Negation(expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))), new Implication(new Negation(expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))))))).toString());
    }

    public static void part4(Expression expression, Expression leftSon) {
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());

    }

    public static void part42(Expression expression, Expression leftSon) {
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
    }

    public static void part5(Expression expression, Expression leftSon) {
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(leftSon, new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon)))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, new Negation(expression)), new Negation(leftSon))), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))).toString());
        System.out.println(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(leftSon, expression))), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(leftSon, expression))), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(leftSon, expression))), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(leftSon, expression))), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(leftSon, expression))), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(leftSon, expression))), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(leftSon, expression))), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(leftSon, expression))), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(leftSon, expression))), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)))).toString());
        System.out.println(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(leftSon, expression))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(leftSon, expression))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(leftSon, expression))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(leftSon, expression)))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(leftSon, expression)))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(leftSon, expression))), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(leftSon, expression))), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(leftSon, expression)), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
    }


    public static void part61(Expression expression, Expression leftSon) {
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))))).toString());
    }

    public static void part62(Expression expression, Expression leftSon) {
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))))).toString());
    }

    public static void part7(Expression expression, Expression leftSon) {
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Negation(expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
    }

    public static void part81(Expression expression, Expression leftSon) {
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
    }

    public static void part82(Expression expression, Expression leftSon) {
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))).toString());
        System.out.println(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))).toString());
        System.out.println(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))), new Implication(new Negation(expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))), new Implication(new Negation(expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))))).toString());

    }

    public static void part9(Expression expression, Expression leftSon) {
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Negation(expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
    }

    public static void part10(Expression expression, Expression leftSon) {
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Negation(expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression))))), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Negation(new Negation(expression)))), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(expression), new Negation(leftSon))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Implication(new Negation(expression), new Negation(leftSon)), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))).toString());
        System.out.println(new Negation(new Negation(leftSon)).toString());
        System.out.println(new Implication(new Negation(expression), new Negation(new Negation(leftSon))).toString());
        System.out.println(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(leftSon, expression), new Negation(new Negation(leftSon)))).toString());
        System.out.println(new Implication(new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(leftSon, expression), new Negation(new Negation(leftSon)))), new Implication(new Negation(expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(leftSon, expression), new Negation(new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(leftSon, expression), new Negation(new Negation(leftSon))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Negation(new Negation(leftSon))), new Implication(new Implication(new Negation(expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(leftSon, expression), new Negation(new Negation(leftSon))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Negation(new Negation(leftSon)))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Negation(new Negation(leftSon)), new Implication(new Implication(leftSon, expression), new Negation(new Negation(leftSon))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Negation(new Negation(leftSon))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Negation(new Negation(leftSon)))).toString());
        System.out.println(new Implication(new Implication(new Implication(leftSon, expression), new Negation(new Negation(leftSon))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))), new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression))))).toString());
        System.out.println(new Implication(new Implication(new Implication(new Implication(leftSon, expression), new Negation(new Negation(leftSon))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))), new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Negation(new Negation(leftSon))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))), new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Negation(new Negation(leftSon))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))), new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression)))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Negation(new Negation(leftSon)))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Negation(new Negation(leftSon))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))), new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression)))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))), new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression))))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Negation(new Negation(leftSon))), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))), new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression)))))), new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))), new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression)))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))), new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression))))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))), new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression)))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Implication(new Negation(new Negation(leftSon)), new Negation(new Negation(expression)))), new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression))))), new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression))))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression)))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression)))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression))), new Negation(new Implication(leftSon, expression)))), new Implication(new Negation(expression), new Negation(new Implication(leftSon, expression))))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Implication(leftSon, expression), new Negation(new Negation(expression))), new Negation(new Implication(leftSon, expression)))), new Implication(new Negation(expression), new Negation(new Implication(leftSon, expression)))).toString());
        System.out.println(new Implication(new Negation(expression), new Negation(new Implication(leftSon, expression))).toString());
        System.out.println(new Negation(new Negation(new Implication(leftSon, expression))).toString());
        System.out.println(new Implication(new Negation(new Negation(new Implication(leftSon, expression))), new Implication(new Negation(expression), new Negation(new Negation(new Implication(leftSon, expression))))).toString());
        System.out.println(new Implication(new Negation(expression), new Negation(new Negation(new Implication(leftSon, expression)))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Negation(new Negation(new Implication(leftSon, expression)))), new Negation(new Negation(expression))).toString());
        System.out.println(new Negation(new Negation(expression)).toString());
    }

    public static void printResult(Expression expression, Expression leftSon) {
        part1(expression, leftSon);
        part2(expression, leftSon);
        part3(expression, leftSon);
        part4(expression, leftSon);
        part42(expression, leftSon);
        part5(expression, leftSon);
        part61(expression, leftSon);
        part62(expression, leftSon);
        part7(expression, leftSon);
        part81(expression, leftSon);
        part82(expression, leftSon);
        part9(expression, leftSon);
        part10(expression, leftSon);
    }
}
