import parser.Expression;
import parser.ExpressionParser;
import parser.ExpressionType;
import parser.operations.binary.Implication;
import parser.operations.unary.Negation;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
import java.util.stream.Collectors;

class ProofParser {

    private final Set<Expression> hypotheses = new HashSet<>();
    private final ExpressionParser expressionParser = new ExpressionParser();
    private final Map<Expression, Set<Expression>> modusPonensResult = new HashMap<>();
    private final Set<Expression> proofSet = new HashSet<>();
    private final BufferedReader in;

    ProofParser() {
//        in = new BufferedReader(new InputStreamReader(new FileInputStream("in.txt")));
        in = new BufferedReader(new InputStreamReader(System.in));
    }

    void parse() throws IOException {
        parseHeading(in.readLine());
        String curLine;
        while ((curLine = in.readLine()) != null) {
            Expression expression = expressionParser.parse(curLine);
            if (tryAxiom(expression)) continue;
            if (tryHypothesis(expression)) continue;
            for (Expression curExpr : modusPonensResult.get(expression)) {
                if (curExpr.getType() == ExpressionType.IMPLICATION && proofSet.contains(curExpr.getLeftOperand())) {
                    ModusPonens.printResult(expression, curExpr.getLeftOperand());
                    add(expression);
                    break;
                }
            }

        }
    }

    private void printProofNegation(Expression expression) {
        System.out.println(expression.toString());
        System.out.println(new Implication(expression, new Implication(new Negation(expression), expression)).toString());
        System.out.println(new Implication(new Negation(expression), expression).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Negation(expression), new Negation(expression))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Negation(expression), new Negation(expression))), new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Negation(expression), new Negation(expression)), new Negation(expression))), new Implication(new Negation(expression), new Negation(expression)))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Implication(new Implication(new Negation(expression), new Negation(expression)), new Negation(expression))), new Implication(new Negation(expression), new Negation(expression))).toString());
        System.out.println(new Implication(new Negation(expression), new Implication(new Implication(new Negation(expression), new Negation(expression)), new Negation(expression))).toString());
        System.out.println(new Implication(new Negation(expression), new Negation(expression)).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), expression), new Implication(new Implication(new Negation(expression), new Negation(expression)), getDoubleNegation(expression))).toString());
        System.out.println(new Implication(new Implication(new Negation(expression), new Negation(expression)), getDoubleNegation(expression)).toString());
        System.out.println(getDoubleNegation(expression).toString());
    }

    private boolean tryAxiom(Expression expression) {
        int num = AxiomChecker.check(expression);
        if (num == -1) return false;
        if (num < 10) {
            printProofNegation(expression);
        } else {
            System.out.println(new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(expression.getRightOperand())), new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), getDoubleNegation(expression.getRightOperand())), getDoubleNegation(expression))).toString());
            System.out.println(new Implication(new Implication(expression.getRightOperand(), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Negation(expression.getRightOperand()))).toString());
            System.out.println(new Implication(new Implication(new Implication(expression.getRightOperand(), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Negation(expression.getRightOperand()))), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(expression.getRightOperand(), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Negation(expression.getRightOperand()))))).toString());
            System.out.println(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(expression.getRightOperand(), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Negation(expression.getRightOperand())))).toString());
            System.out.println(new Implication(expression.getRightOperand(), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())).toString());
            System.out.println(new Implication(new Implication(expression.getRightOperand(), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(expression.getRightOperand(), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))).toString());
            System.out.println(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(expression.getRightOperand(), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))).toString());
            System.out.println(new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(expression.getRightOperand(), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(expression.getRightOperand(), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Negation(expression.getRightOperand())))), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Negation(expression.getRightOperand()))))).toString());
            System.out.println(new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(expression.getRightOperand(), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Negation(expression.getRightOperand())))), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Negation(expression.getRightOperand())))).toString());
            System.out.println(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Negation(expression.getRightOperand()))).toString());
            System.out.println(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))).toString());
            System.out.println(new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))), new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))))).toString());
            System.out.println(new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))).toString());
            System.out.println(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))).toString());
            System.out.println(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))).toString());
            System.out.println(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))).toString());
            System.out.println(new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))))).toString());
            System.out.println(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))))).toString());
            System.out.println(new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))))), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))))).toString());
            System.out.println(new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))))), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))))).toString());
            System.out.println(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))).toString());
            System.out.println(new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))), new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Negation(expression.getRightOperand()))), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(expression.getRightOperand())))).toString());
            System.out.println(new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(expression.getRightOperand(), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Negation(expression.getRightOperand()))), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(expression.getRightOperand()))).toString());
            System.out.println(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(expression.getRightOperand())).toString());
            System.out.println(new Implication(new Implication(new Negation(expression.getRightOperand()), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), getDoubleNegation(expression.getRightOperand()))).toString());
            System.out.println(new Implication(new Implication(new Implication(new Negation(expression.getRightOperand()), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), getDoubleNegation(expression.getRightOperand()))), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(expression.getRightOperand()), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), getDoubleNegation(expression.getRightOperand()))))).toString());
            System.out.println(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(expression.getRightOperand()), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), getDoubleNegation(expression.getRightOperand())))).toString());
            System.out.println(new Implication(new Negation(expression.getRightOperand()), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())).toString());
            System.out.println(new Implication(new Implication(new Negation(expression.getRightOperand()), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(expression.getRightOperand()), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))).toString());
            System.out.println(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(expression.getRightOperand()), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))).toString());
            System.out.println(new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(expression.getRightOperand()), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(expression.getRightOperand()), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), getDoubleNegation(expression.getRightOperand())))), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), getDoubleNegation(expression.getRightOperand()))))).toString());
            System.out.println(new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(expression.getRightOperand()), new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), getDoubleNegation(expression.getRightOperand())))), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), getDoubleNegation(expression.getRightOperand())))).toString());
            System.out.println(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), getDoubleNegation(expression.getRightOperand()))).toString());
            System.out.println(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))).toString());
            System.out.println(new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))), new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))))).toString());
            System.out.println(new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))).toString());
            System.out.println(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))).toString());
            System.out.println(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))).toString());
            System.out.println(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))).toString());
            System.out.println(new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))))).toString());
            System.out.println(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))))).toString());
            System.out.println(new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))))), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))))).toString());
            System.out.println(new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))))), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))))).toString());
            System.out.println(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))).toString());
            System.out.println(new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())))), new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), getDoubleNegation(expression.getRightOperand()))), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), getDoubleNegation(expression.getRightOperand())))).toString());
            System.out.println(new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), new Implication(new Implication(new Negation(expression.getRightOperand()), new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand()))), getDoubleNegation(expression.getRightOperand()))), new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), getDoubleNegation(expression.getRightOperand()))).toString());
            System.out.println(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), getDoubleNegation(expression.getRightOperand())).toString());
            System.out.println(new Implication(new Implication(new Negation(new Implication(getDoubleNegation(expression.getRightOperand()), expression.getRightOperand())), getDoubleNegation(expression.getRightOperand())), getDoubleNegation(expression)).toString());
            System.out.println(getDoubleNegation(expression).toString());
        }
        add(expression);
        return true;
    }

    private boolean tryHypothesis(Expression expression) {
        for (Expression hypothesis : hypotheses) {
            if (hypothesis.equals(expression)) {
                printProofNegation(hypothesis);
                add(expression);
                return true;
            }
        }
        return false;
    }

    private void add(Expression expression) {
        if (expression.getType() == ExpressionType.IMPLICATION) {
            modusPonensResult.putIfAbsent(expression.getRightOperand(), new HashSet<>());
            modusPonensResult.get(expression.getRightOperand()).add(expression);
        }
        proofSet.add(expression);
    }

    private void parseHeading(String heading) {
        int turnstileIdx = heading.indexOf("|-");
        String hypsList = heading.substring(0, turnstileIdx);
        if (turnstileIdx > 0) {
            Set<Expression> hyps = Arrays.stream(hypsList.split(","))
                    .map(expressionParser::parse)
                    .collect(Collectors.toSet());
            hypotheses.addAll(hyps);
        }
        Expression theorem = expressionParser.parse(heading.substring(turnstileIdx + 2));
        String result = hypsList + "|- " + getDoubleNegation(theorem);
        System.out.println(result);
    }

    private Expression getDoubleNegation(Expression expression) {
        return new Negation(new Negation(expression));
    }
}
